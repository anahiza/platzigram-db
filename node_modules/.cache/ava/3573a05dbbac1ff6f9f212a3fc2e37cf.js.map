{"version":3,"sources":["db-test.js"],"names":["test","require","Db","uuid","r","dbName","v4","db","before","t","connect","true","connected","after","disconnect","false","always","conn","dbDrop","run","is","saveImage","image","url","likes","liked","userid","created","id","truthy","createdAt"],"mappings":"AAAA;;;;;;;;;;;AACA,MAAMA,OAAOC,QAAQ,KAAR,CAAb;AACA,MAAMC,KAAKD,QAAQ,KAAR,CAAX;AACA,MAAME,OAAOF,QAAQ,aAAR,CAAb;AACA,MAAMG,IAAIH,QAAQ,WAAR,CAAV;;AAEA,MAAMI,SAAU,eAAaF,KAAKG,EAAL,EAAU,GAAvC;AACA,MAAMC,KAAK,IAAIL,EAAJ,CAAO,EAACK,IAAIF,MAAL,EAAP,CAAX;;AAEAL,KAAKQ,MAAL,CAAY,gBAAZ;AAAA,6CAA8B,WAAMC,CAAN,EAAW;AAAA;;AACvC,UAAMF,GAAGG,OAAH,EAAN;AACAD,MAAEE,IAAF,uBAAO,qCAAGC,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAqB,qBAArB;AACD,GAHD;;AAAA;AAAA;AAAA;AAAA;;AAKAZ,KAAKa,KAAL,CAAW,qBAAX;AAAA,8CAAkC,WAAMJ,CAAN,EAAW;AAAA;;AAC3C,UAAMF,GAAGO,UAAH,EAAN;AACAL,MAAEM,KAAF,yBAAQ,sCAAGH,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAsB,wBAAtB;AACD,GAHD;;AAAA;AAAA;AAAA;AAAA;;AAKAZ,KAAKa,KAAL,CAAWG,MAAX,CAAkB,kBAAlB;AAAA,8CAAsC,WAAMP,CAAN,EAAW;AAC/C,QAAIQ,OAAO,MAAMb,EAAEM,OAAF,CAAU,EAAV,CAAjB;AACA,UAAMN,EAAEc,MAAF,CAASb,MAAT,EAAiBc,GAAjB,CAAqBF,IAArB,CAAN;AACD,GAHD;;AAAA;AAAA;AAAA;AAAA;;AAKAjB,KAAK,YAAL;AAAA,8CAAmB,WAAMS,CAAN,EAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAC5BA,MAAEW,EAAF,yBAAK,mBAAO,+CAAGC,SAAV,yBAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA0B,UAA1B,EAAsC,yBAAtC;AACA,QAAIC,QAAQ;AACVC,WAAM,gCAA8BpB,KAAKG,EAAL,EAAU,GADpC;AAEVkB,aAAO,CAFG;AAGVC,aAAO,KAHG;AAIVC,cAAS;AAJC,KAAZ;;AAOA,QAAIC,UAAU,MAAMpB,GAAGc,SAAH,CAAaC,KAAb,CAApB;AACAb,MAAEW,EAAF,yBAAK,2CAAQG,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAkB,yCAAMA,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAd,MAAEW,EAAF,yBAAK,2CAAQI,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAoB,yCAAMA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAf,MAAEW,EAAF,yBAAK,2CAAQK,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAoB,yCAAMA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAhB,MAAEW,EAAF,2BAAK,4CAAQM,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAqB,0CAAMA,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAjB,MAAEW,EAAF,2BAAK,oBAAO,qDAAQQ,EAAf,yBAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAwB,QAAxB;AACAnB,MAAEoB,MAAF,2BAAS,4CAAQC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,GAhBD;;AAAA;AAAA;AAAA;AAAA","file":"db-test.js","sourcesContent":["'use strict'\r\nconst test = require('ava')\r\nconst Db = require('../')\r\nconst uuid = require('uuid-base62')\r\nconst r = require('rethinkdb')\r\n\r\nconst dbName = `platzigram_${uuid.v4()}`\r\nconst db = new Db({db: dbName})\r\n\r\ntest.before('setup database', async t => {\r\n  await db.connect()\r\n  t.true(db.connected, 'should be connected')\r\n})\r\n\r\ntest.after('disconnect database', async t => {\r\n  await db.disconnect()\r\n  t.false(db.connected, 'should be disconnected')\r\n})\r\n\r\ntest.after.always('cleanup database', async t => {\r\n  let conn = await r.connect({})\r\n  await r.dbDrop(dbName).run(conn)\r\n})\r\n\r\ntest('save image', async t => {\r\n  t.is(typeof db.saveImage, 'function', 'saveImage is a function')\r\n  let image = {\r\n    url: `https://platzigram.test.com/${uuid.v4()}`,\r\n    likes: 0,\r\n    liked: false,\r\n    userid: `{uuid.v4()}`\r\n  }\r\n\r\n  let created = await db.saveImage(image)\r\n  t.is(created.url, image.url)\r\n  t.is(created.likes, image.likes)\r\n  t.is(created.liked, image.liked)\r\n  t.is(created.userid, image.userid)\r\n  t.is(typeof created.id, 'string')\r\n  t.truthy(created.createdAt)\r\n})\r\n"]}