{"version":3,"sources":["utils-test.js"],"names":["test","require","utils","t","tags","extractTags","deepEqual","password","encrypted","result","encrypt","is"],"mappings":"AAAA;;;;;AACA,MAAMA,OAAOC,QAAQ,KAAR,CAAb;AACA,MAAMC,QAAQD,QAAQ,cAAR,CAAd;AACAD,KAAK,+BAAL,EAAsCG,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACzC,MAAIC,OAAOF,MAAMG,WAAN,CAAkB,2DAAlB,CAAX;AACAF,IAAEG,SAAF,uBAAYF,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAkB,CAChB,SADgB,EAEhB,SAFgB,EAGhB,QAHgB,EAIhB,KAJgB,EAKhB,KALgB,EAMhB,KANgB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASAA,SAAOF,MAAMG,WAAN,CAAkB,wBAAlB,CAAP;AACAF,IAAEG,SAAF,yBAAYF,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAkB,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEAA,SAAOF,MAAMG,WAAN,EAAP;AACAF,IAAEG,SAAF,yBAAYF,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAkB,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEAA,SAAOF,MAAMG,WAAN,CAAkB,IAAlB,CAAP;AACAF,IAAEG,SAAF,yBAAYF,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAkB,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,CAnBD;;AAqBAJ,KAAK,kBAAL,EAAyBG,KAAK;AAAA;AAAA;;AAC5B,MAAII,WAAW,QAAf;AACA,MAAIC,YAAY,kEAAhB;AACA,MAAIC,SAASP,MAAMQ,OAAN,CAAcH,QAAd,CAAb;AACAJ,IAAEQ,EAAF,yBAAKF,MAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAaD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,CALD","file":"utils-test.js","sourcesContent":["'use strict'\r\nconst test = require('ava')\r\nconst utils = require('../lib/utils')\r\ntest('extracting hashtags from text', t => {\r\n  let tags = utils.extractTags('a #picture with tags #AwEsOmE #Platzi #AVA #100 and ##yes')\r\n  t.deepEqual(tags, [\r\n    'picture',\r\n    'awesome',\r\n    'platzi',\r\n    'ava',\r\n    '100',\r\n    'yes'\r\n  ])\r\n\r\n  tags = utils.extractTags('a picture with no tags')\r\n  t.deepEqual(tags, [])\r\n\r\n  tags = utils.extractTags()\r\n  t.deepEqual(tags, [])\r\n\r\n  tags = utils.extractTags(null)\r\n  t.deepEqual(tags, [])\r\n})\r\n\r\ntest('encrypt password', t => {\r\n  let password = 'foo123'\r\n  let encrypted = '02b353bf5358995bc7d193ed1ce9c2eaec2b694b21d2f96232c9d6a0832121d1'\r\n  let result = utils.encrypt(password)\r\n  t.is(result, encrypted)\r\n})\r\n"]}